@using ProjectMovies.Client.Pages.Components
@using ProjectMovies.Client.Model

<EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="container">
        <label> Por favor ingrese la siguiente información para añadir una pelicula </label>
        <div class="jumbotron">
            <div class="form-group">
                <div class="row">
                    <div class="col col-sm-9">
                        @* Input Nombre de la pelicula *@
                        <h6> Nombre de la pelicula</h6>
                        <InputText class="form-control" @bind-Value="@Movie.MovieName"></InputText>
                        <ValidationMessage For="@(()=>Movie.MovieName)"></ValidationMessage>
                    </div>
                    <div class="col col-sm-3">
                        @* Checkbox para definir si esta o no en cartelera *@
                        <br>
                        <InputCheckbox id="en_cartelera" class="form-check-input" @bind-Value="@Movie.EnCartelera">
                        </InputCheckbox>
                        <label class="form-check-label" for="en_cartelera">En cartelera</label>
                        <ValidationMessage For="@(()=>Movie.EnCartelera)"></ValidationMessage>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            @* Fecha de lanzamiento*@
                            <label> Fecha de estreno </label>
                            <InputDate class="form-control" @bind-Value="@Movie.Premier"></InputDate>
                            <ValidationMessage For="@(()=>Movie.Premier)"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
            @* Sinopsis de la pelicula *@
            <div class="form-group">
                <label> Sinopsis </label>
                <InputTextArea class="form-control" @bind-Value="@Movie.MovieSynopsis"></InputTextArea>
                <ValidationMessage For="@(()=>Movie.MovieSynopsis)"></ValidationMessage>
            </div>
            @* Selección de categorías *@
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label>Selecciona la(s) categoría(s) de la pelicula</label>
                        <div>
                            <SelectorMultiple Seleccionados="Seleccionados" NoSeleccionados="NoSeleccionados">
                            </SelectorMultiple>
                        </div>
                    </div>
                </div>
            </div>
                    <div class="col">
                        @* Poster => Imagen de la pelicula *@
                        <label>Cargar imagen</label>
                        <div class="form-group">
                            <ImageComponent Label="" ImageSelected="ImageSelected" ImageURL=""></ImageComponent>
                        </div>
                    </div>
                
            <button type="submit" class="btn btn-success">Aceptar</button>
            <button type="submit" class="btn btn-danger">Cancelar</button>

        </div>
    </div>
</EditForm>
@code {
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Category> CategoriasSeleccionadas { get; set; } = new List<Category>();
    [Parameter] public List<Category> CategoriasNoSeleccionadas { get; set; } = new List<Category>();
    
    
    private string posterTemporal;
    private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();

    private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();

    private void ImageSelected(string imageB64)
    {
        Movie.MovieImage = imageB64;
    }

    protected override void OnInitialized()
    {
        Seleccionados = CategoriasSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.CategoryType)).ToList();
        NoSeleccionados = CategoriasNoSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.CategoryType)).ToList();
        if (!string.IsNullOrWhiteSpace(Movie.MovieImage))
        {
            posterTemporal = Movie.MovieImage;
            Movie.MovieImage = null;
        }
    }
    
}
